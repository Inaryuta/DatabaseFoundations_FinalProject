CREATE TABLE Category (
    CategoryID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    Name VARCHAR(100) NOT NULL,
    Description TEXT NULL
);

CREATE TABLE Brand (
    BrandID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    Name VARCHAR(100) NOT NULL,
    Country VARCHAR(100) NULL
);

CREATE TABLE Instrument (
    InstrumentID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    Name VARCHAR(255) NOT NULL,
    Description TEXT NULL,
    Price DECIMAL(10,2) NOT NULL CHECK(Price > 0),
    Stock INT NOT NULL CHECK(Stock >= 0),
    CategoryID INT NOT NULL,
    BrandID INT NOT NULL,
    FOREIGN KEY (CategoryID) REFERENCES Category(CategoryID),
    FOREIGN KEY (BrandID) REFERENCES Brand(BrandID)
);

CREATE TABLE Accessory (
    AccessoryID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    Name VARCHAR(255) NOT NULL,
    Description TEXT NULL,
    Price DECIMAL(10,2) NOT NULL CHECK(Price > 0),
    Stock INT NOT NULL CHECK(Stock >= 0),
    CategoryID INT NOT NULL,
    BrandID INT NOT NULL,
    FOREIGN KEY (CategoryID) REFERENCES Category(CategoryID),
    FOREIGN KEY (BrandID) REFERENCES Brand(BrandID)
);

CREATE TABLE User (
    UserID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    Username VARCHAR(100) UNIQUE NOT NULL,
    Password VARCHAR(255) NOT NULL,
    Role ENUM('administrator', 'customer') NOT NULL,
    Email VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE Supplier (
    SupplierID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    Name VARCHAR(255) NOT NULL,
    Address VARCHAR(255) NULL,
    ContactInfo VARCHAR(255) NOT NULL
);

-- Crear Receipt sin la referencia a Inventory_Receipt
CREATE TABLE Receipt (
    ReceiptID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    UserID INT NOT NULL,
    SupplierID INT NULL,
    Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    TotalAmount DECIMAL(10,2) NOT NULL CHECK(TotalAmount >= 0),
    ReceiptType ENUM('purchase', 'sale') NOT NULL,
    FOREIGN KEY (UserID) REFERENCES User(UserID),
    FOREIGN KEY (SupplierID) REFERENCES Supplier(SupplierID)
);

-- Crear Inventory sin la clave foránea a Inventory_Receipt
CREATE TABLE Inventory (
    InventoryID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    InstrumentID INT NOT NULL,
    AccessoryID INT NOT NULL,
    Quantity INT NOT NULL CHECK(Quantity >= 0),
    DateUpdated TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (InstrumentID) REFERENCES Instrument(InstrumentID),
    FOREIGN KEY (AccessoryID) REFERENCES Accessory(AccessoryID)
);

-- Crear History_Receipts
CREATE TABLE History_Receipts (
    HistoryID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    ReceiptID INT NOT NULL,
    Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Status ENUM('completed', 'refunded') NOT NULL,
    FOREIGN KEY (ReceiptID) REFERENCES Receipt(ReceiptID)
);

-- Crear Inventory_Receipt con referencias a Inventory y Receipt
CREATE TABLE Inventory_Receipt (
    InventoryReceiptID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    InventoryID INT NOT NULL,
    ReceiptID INT NOT NULL,
    Quantity INT NOT NULL CHECK(Quantity > 0),
    FOREIGN KEY (InventoryID) REFERENCES Inventory(InventoryID),
    FOREIGN KEY (ReceiptID) REFERENCES Receipt(ReceiptID)
);

-- Agregar la clave foránea en Receipt para InventoryReceiptID
ALTER TABLE Receipt 
ADD COLUMN InventoryReceiptID INT NULL,
ADD CONSTRAINT fk_inventory_receipt FOREIGN KEY (InventoryReceiptID) REFERENCES Inventory_Receipt(InventoryReceiptID);

-- Agregar la clave foránea en Inventory para InventoryReceiptID
ALTER TABLE Inventory 
ADD COLUMN InventoryReceiptID INT NULL,
ADD CONSTRAINT fk_inventory_inventoryreceipt FOREIGN KEY (InventoryReceiptID) REFERENCES Inventory_Receipt(InventoryReceiptID);
